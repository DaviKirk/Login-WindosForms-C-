<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARtSURBVFhH7ZZbTFt1HMf/G7I9mRnjEl+8vJiYGKMPmj0Y
        h3NeMuiVAhMxMVPnJZppYnwzccuim5kyorE10cSH6ZjsDowtoqDU0VPOKdCWXrgIM2xQ2kKhhUN7Cnz9
        /Q+HWm4FM+IT3+STX/99ON/P+fdcyjazmZWCmtK8iMu4NyIaq6JtRlu0zWDlhPkUy6wTvZ9ZE/1VRKU6
        +TpM34cFnTUkGFRGHHpbSNB9NeTQ7UNzwR3aodeXqMtwICoZo1HRhKhozBBpoymVId57DFRMnFRnvO8Y
        IvR92KnHiGDIQo/hVt14yFF0UDv02om3l+yMSqb2UYmX375AyEG06nw324z3aRW5ExUNu6h8YmMF9FO3
        hKKntYrcGWszFYxKRnlDBRw6eahVV6BV5E5uAUOWAC+fh68jIglQ4e0LtJsKYi6THHOZMcYhkQVIDGPt
        +zH513FMDlRlSNB61FWmCkacJKrCPxtoVwhBL4fXK6D4SwqSfouc8pcgmcEyj48IVGD21peYC1mJb9TJ
        19P+lyF7izGVjceMSSLhMclxj2n9AkqgRE4HS6EEOCUZuJQSfAVzw5XAiI2wqpOvUyTGBae7sinWpMyy
        vKECQ6sJFP8fAhU5dqAYKSpVusw051G8Jkx7TRu9AycwO3gU6f4PaB5R11wgRQIdne/iiPM7HBQu4C3h
        HL5uO4k+9wFZ2SiBVGA/lJ7X1cnPOOkvo/VrkP0vwSZ+gQda+8CcCpgEYg5bnTIev96RfuGPaxVaRe6s
        KaBiyXzmF17aZ8YZ8TB22IfB2oEtHUB+JwnQVJFmwZqjblY78LBWs3rWJ5AFCUS95Xj29yYwIQUmpqHr
        nYWxbwZ5UhrbXGlspclaJ8Gu/n1cq1k9ywX+lUitIMHPXnC9h7sbe8CuJ1AUmMaN5Bx88izqYjNoIAr9
        Mph9ggRuCKxG2qFVrZwFAYXObPSXpxCuewLh+ixonRBeJJlSVWDGb0aj+CG2X+3FXfYImsZSWJp3uuNg
        v42A1ff1s2pv7rfiIoFGEqh/cjFLBNJ0Ibpcb2NnrcS3GPvEEAbkNHyJFOpGptAQnkKhROUNA2Dnu1rY
        93/eqVWtnMxPQAVJD93DnYZ53MZFW5+BRGOeMhTWVYNdCIJdCqLQMQiD8ybyaruxra4bW2lSOdhp8WOt
        ZvUsCPCHyPD5xzB46iGVoZpHSGS5BL8LFLoOLrccwr1n6EI858OWi37kXwqA0VQ56wX70elgPzge1GpW
        j9Jt2UUCEwrdahP2vYg17UaseTfGW/Yg6aWn2woCnESnCad/fR+P/nwRedX0c9R4CDe2VwvYc/ZU8o3L
        lUatIncQLL+H7gBJvQuC9JBR5zxLy7MFOPF2Izrt5fj22kc4euUwPr3yCX5qPIQeu8UvS8/dr1WsnRl/
        6atUGF3PcyBbgL+A+E6Mi3qMOXULjI86/8OfUh6gNC8dsDxDV/rnVGKjJ5+VQ/8JltO1GJnjsVgT7mJb
        wm06kfCYn4f0Zr526M1sZkkY+wfWqWrx7TMKHgAAAABJRU5ErkJggg==
</value>
  </data>
</root>